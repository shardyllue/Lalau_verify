from json import dumps

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.deep_linking import get_start_link

from db.base import AppTable

from module.edit import EditCall
from module.premium import appCall, bandCall 
from module.app import UserCall as AppUserCall
from module.payment import UserCall as PayUserCall

import template.base as Tbase



app_text = """
–ì–æ—Ä–æ–¥:  {app.city}
–í–æ–∑—Ä–∞—Å—Ç:  {app.years}
–ò–º—è:  {app.name}

–†–µ–π—Ç–∏–Ω–≥:  {app.score}
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:  {app.usrname}
"""

app_delete = """<b>–í—ã —É–¥–∞–ª–∏–ª–∏ –∞–Ω–∫–µ—Ç—É</b>\n\n<i>–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –í—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –µ—ë –∑–∞–Ω–æ–≤–∞!</i>"""


def app_kb(app : AppTable):

    _kb = InlineKeyboardMarkup(row_width=1)


    if app.video_id is not None:
        _kb.add(
            InlineKeyboardButton(
                text="üëÅ –ú–æ—ë –≤–∏–¥–µ–æ",
                callback_data=AppUserCall.new(
                    action="open.video"
                )
            ),    
            InlineKeyboardButton(
                text=(
                    "üü¢ –°—Ç–∞—Ç—É—Å –≤–∏–¥–µ–æ: –ü—É–±–ª–∏—á–Ω—ã–π" 
                    if app.pub_video else 
                    "*Ô∏è‚É£ –°—Ç–∞—Ç—É—Å –≤–∏–¥–µ–æ: –ü—Ä–∏–≤–∞—Ç–Ω—ã–π"),
                callback_data=(
                    EditCall.new(value="switch.video.off") 
                    if app.pub_video else 
                    EditCall.new(value="switch.video.on") 
                )
            ),
            InlineKeyboardButton(
                text=(
                    "üü¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤ –æ–±—â–µ–π –≥—Ä—É–ø–ø–µ: –î–∞" 
                    if app.post_app else 
                    "*Ô∏è‚É£ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤ –æ–±—â–µ–π –≥—Ä—É–ø–ø–µ: –ù–µ—Ç"),
                callback_data=(
                    EditCall.new(value="switch.channel.off") 
                    if app.post_app else 
                    EditCall.new(value="switch.channel.on") 
                )
            )
        )

    _kb.add(
        InlineKeyboardButton(
            text="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
            callback_data=AppUserCall.new(
                action="open.edit"
            )
        )
    ).row(
        InlineKeyboardButton(
            text="‚ùå –£–¥–∞–ª–∏—Ç—å",
            callback_data=AppUserCall.new(
                action="delete"
            )
        ),InlineKeyboardButton(
            text="üîù –†–µ–π—Ç–∏–Ω–≥",
            callback_data=AppUserCall.new(
                action="pay_raiting",
            )
        ),        
    )


    if app.moderated is False:
        _kb.add(
            InlineKeyboardButton(
                text="‚è∫ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ ...",
                callback_data="."
            )
        )

    elif app.moderated is None:
        _kb.add(
            InlineKeyboardButton(
                text="–ê–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                callback_data="."
            )
        )   

    return _kb    

    
premium_text = """
–ì–æ—Ä–æ–¥:  {app.city}
–í–æ–∑—Ä–∞—Å—Ç:  {app.years}
–ò–º—è:  {app.name}\n
–ü–æ–ª:  {app.gender}
–†–µ–π—Ç–∏–Ω–≥:  {app.score}
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:  {app.usrname}
"""


premium_err = """
üìé –ü–æ—Ö–æ–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ—à–∏–ª —É–¥–∞–ª–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –µ—ë, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–¥–æ–±—Ä—è—Ç—å –∞–Ω–∫–µ—Ç—É –∏–ª–∏ –æ–Ω –µ—ë —Å–æ–∑–¥–∞—Ç—å!
"""


premium_getting = """üîç –ü–æ–¥–æ–∂–¥–∏—Ç–µ... –∏—â–µ–º –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""


def premium_kb(
    app : AppTable, 
    chat_id : int,
    photo_mode : bool = True, 
    page : int = 0
):
    _kb = InlineKeyboardMarkup()


    if (app.video_id is not None) and (app.pub_video is True):

        if photo_mode:
            _kb.add(
                InlineKeyboardButton(
                    text="üì∏ –í–∏–¥–µ–æ", 
                    callback_data=appCall.new(
                        action="video", 
                        user_id=app.user_id, 
                        page=page
                    )
                ),
            )
        else:
            _kb.add(
                InlineKeyboardButton(
                    text="üì∏ —Ñ–æ—Ç–æ", 
                    callback_data=appCall.new(
                        action="open", 
                        user_id=app.user_id, 
                        page=page
                    )
                ),
            )

    _kb.row(
        InlineKeyboardButton(
            text="üéÅ –ß–∞–µ–≤—ã–µ", 
            callback_data=PayUserCall.new(
                action="form",
                from_id=chat_id,
                to_id=app.user_id,
                page=page
            )
        ),
        InlineKeyboardButton(
            text=Tbase.back_text,
            callback_data=bandCall.new(action="open", page=page)
        ),
    )

    return _kb


    
posting_text = """
<b>–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ</b>

–ì–æ—Ä–æ–¥:  {app.city}
–í–æ–∑—Ä–∞—Å—Ç:  {app.years}
–ò–º—è:  {app.name}

–†–µ–π—Ç–∏–Ω–≥:  {app.score}
"""


async def posting_kb(username : str, user_id : int, page = int):
    return InlineKeyboardMarkup().add(
        InlineKeyboardButton(
            text="–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å",
            url=await get_start_link(
                payload=dumps({
                    "user_id" : user_id,
                    "page" : page
                }),
                encode=True
            )
        )
    )


video_text = "–í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∏–∂–µ"
video_btn_skip = "–£–±—Ä–∞—Ç—å"


video_kb = InlineKeyboardMarkup().add(
    InlineKeyboardButton(
        text=video_btn_skip,
        callback_data=AppUserCall.new(
            action="close.video"
        )
    )
)